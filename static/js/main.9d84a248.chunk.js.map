{"version":3,"sources":["Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["withRouter","pathname","location","List","Item","current","SLink","to","Header","styled","header","ul","li","props","Link","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","data","results","this","setState","console","log","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","e","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"+7BAIeA,mBAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,cAAC,EAAD,UACE,eAACE,EAAD,WACE,cAACC,EAAD,CAAMC,QAAsB,MAAbJ,EAAf,SACE,cAACK,EAAD,CAAOC,GAAG,IAAV,sBAEF,cAACH,EAAD,CAAMC,QAAsB,QAAbJ,EAAf,SACE,cAACK,EAAD,CAAOC,GAAG,MAAV,kBAEF,cAACH,EAAD,CAAMC,QAAsB,YAAbJ,EAAf,SACE,cAACK,EAAD,CAAOC,GAAG,UAAV,8BAMFC,EAASC,IAAOC,OAAV,KAaNP,EAAOM,IAAOE,GAAV,KAGJP,EAAOK,IAAOG,GAAV,KAIqB,SAACC,GAAD,OAAYA,EAAMR,QAAU,MAAQ,iBAG7DC,EAAQG,YAAOK,IAAPL,CAAH,K,iECjCLM,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EACC,kBAAMP,EAAIQ,IAAI,sBADfD,EAED,kBAAMP,EAAIQ,IAAI,sBAFbD,EAGF,kBAAMP,EAAIQ,IAAI,kBAHZD,EAIE,SAACE,GAAD,OAAQT,EAAIQ,IAAJ,gBAAiBC,GAAM,CAC1CL,OAAQ,CACNM,mBAAoB,aANbH,EASH,SAACI,GAAD,OAAUX,EAAIQ,IAAI,eAAgB,CACxCJ,OAAQ,CACNQ,MAAOD,MAKAE,EACD,kBAAMb,EAAIQ,IAAI,iBADbK,EAEF,kBAAMb,EAAIQ,IAAI,eAFZK,EAGE,kBAAMb,EAAIQ,IAAI,oBAHhBK,EAIC,SAACJ,GAAD,OAAQT,EAAIQ,IAAJ,aAAcC,GAAM,CACtCL,OAAQ,CACNM,mBAAoB,aANbG,EASH,SAACF,GAAD,OAAUX,EAAIQ,IAAI,YAAa,CACrCJ,OAAQ,CACNQ,MAAOD,M,4bCxCb,IAAMG,EAAYpB,IAAOqB,IAAV,KAMTC,EAAQtB,IAAOuB,KAAV,KAKLC,EAAOxB,IAAOqB,IAAV,KAuBKI,EAhBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACP,EAAD,WACE,cAACE,EAAD,UAAQI,IACR,cAACF,EAAD,UAAOG,Q,6MCvBX,IAAMP,EAAYpB,IAAOqB,IAAV,KASA,oBACb,cAAC,EAAD,UACE,sBAAMO,KAAK,MAAMC,aAAW,UAA5B,uB,oOCVJ,IAAMT,EAAYpB,IAAOqB,IAAV,KAKTS,GAAO9B,IAAOuB,KAAV,KACG,SAACnB,GAAD,OAAWA,EAAM2B,SAYfC,GATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,cAAC,EAAD,UACE,cAACD,GAAD,CAAMC,MAAOA,EAAb,SAAqBE,O,07BCTzB,IAAMb,GAAYpB,IAAOqB,IAAV,MAGTa,GAAQlC,IAAOqB,IAAV,MACa,SAACjB,GAAD,OAAWA,EAAM+B,SAOnCC,GAASpC,IAAOqB,IAAV,MAONgB,GAAiBrC,IAAOqB,IAAV,KAIda,GAGAE,IAKAd,GAAQtB,IAAOuB,KAAV,MAILe,GAAOtC,IAAOqB,IAAV,MAoCKkB,GA/BA,SAAC,GAAD,IACbxB,EADa,EACbA,GAAIyB,EADS,EACTA,SAAUd,EADD,EACCA,MAAOe,EADR,EACQA,OAAQC,EADhB,EACgBA,KADhB,IACsBC,eADtB,gBAGb,cAAC,IAAD,CAAM7C,GAAI6C,EAAO,iBAAa5B,GAAb,gBAA6BA,GAA9C,SACE,eAAC,GAAD,WACE,eAACsB,GAAD,WACE,cAACH,GAAD,CAAOC,MAAOK,EAAQ,yCAAqCA,GAAa,+BACxE,eAACJ,GAAD,WACE,sBAAMR,KAAK,MAAMC,aAAW,SAA5B,0BAGC,IACAY,EALH,YASF,cAAC,GAAD,UAAQf,EAAMkB,OAAS,GAAf,UAAuBlB,EAAMmB,UAAU,EAAG,IAA1C,QAAsDnB,IAC9D,cAACY,GAAD,UAAOI,U,2FCnDb,IAAMtB,GAAYpB,IAAOqB,IAAV,MA6EAyB,GAzEO,SAAC,GAAD,IACpBC,EADoB,EACpBA,WAAYC,EADQ,EACRA,SAAUC,EADF,EACEA,QAASC,EADX,EACWA,MAAOC,EADlB,EACkBA,QADlB,OAGpB,qCACE,cAACC,EAAA,EAAD,UACE,qDAEDD,EACC,cAACE,EAAD,IAEA,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,qDAEDL,GAAcA,EAAWH,OAAS,GACnC,cAAC,EAAD,CAASlB,MAAM,cAAf,SACGqB,EAAWO,KAAI,SAACC,GAAD,OACd,cAAC,GAAD,CAEExC,GAAIwC,EAAMxC,GACVyB,SAAUe,EAAMC,YAChB9B,MAAO6B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAad,UAAU,EAAG,GACtCF,SAAO,GANFY,EAAMxC,SAWhBiC,GAAYA,EAASJ,OAAS,GAC/B,cAAC,EAAD,CAASlB,MAAM,YAAf,SACGsB,EAASM,KAAI,SAACC,GAAD,OACZ,cAAC,GAAD,CAEExC,GAAIwC,EAAMxC,GACVyB,SAAUe,EAAMC,YAChB9B,MAAO6B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAad,UAAU,EAAG,GACtCF,SAAO,GANFY,EAAMxC,SAWhBkC,GAAWA,EAAQL,OAAS,GAC7B,cAAC,EAAD,CAASlB,MAAM,UAAf,SACGuB,EAAQK,KAAI,SAACC,GAAD,OACX,cAAC,GAAD,CAEExC,GAAIwC,EAAMxC,GACVyB,SAAUe,EAAMC,YAChB9B,MAAO6B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAad,UAAU,EAAG,GACtCF,SAAO,GANFY,EAAMxC,SAWhBmC,GAAS,cAAC,GAAD,CAASnB,MAAM,UAAUE,KAAMiB,WCxElCU,G,kDCGb,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IACDyD,MAAQ,CACXd,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,GAPM,E,mNAaiCtC,I,uBAAvBkC,E,EAAjBe,KAAQC,Q,SAC8BlD,I,uBAArBmC,E,EAAjBc,KAAQC,Q,UAC6BlD,I,iBAApBoC,E,EAAjBa,KAAQC,QAChBC,KAAKC,SAAS,CACZlB,aACAC,WACAC,Y,kDAIFe,KAAKC,SAAS,CAAEf,MAAO,6B,yBAEvBc,KAAKC,SAAS,CAAEd,SAAS,I,kKAInB,IAAD,EAGHa,KAAKH,MADPd,EAFK,EAELA,WAAYC,EAFP,EAEOA,SAAUC,EAFjB,EAEiBA,QAASC,EAF1B,EAE0BA,MAAOC,EAFjC,EAEiCA,QAGxC,OADAe,QAAQC,IAAIH,KAAKH,OAEf,cAAC,GAAD,CACEd,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GAzCYiB,IAAMC,W,4UCOnC,IAAMjD,GAAYpB,IAAOqB,IAAV,MAITiD,GAAOtE,IAAOuE,KAAV,MAKJC,GAAQxE,IAAOyE,MAAV,MAmEIC,GA7DS,SAAC,GAAD,IACtBC,EADsB,EACtBA,aAAcC,EADQ,EACRA,UAAWC,EADH,EACGA,WAAY1B,EADf,EACeA,QAASD,EADxB,EACwBA,MAAO4B,EAD/B,EAC+BA,aAAcC,EAD7C,EAC6CA,WAD7C,OAGtB,eAAC,GAAD,WACE,cAAC3B,EAAA,EAAD,UACE,qDAEF,cAACkB,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CAAOS,YAAY,+BAA+BC,MAAOL,EAAYM,SAAUJ,MAEhF5B,EACC,cAACE,EAAD,IAEA,qCACGsB,GAAgBA,EAAa/B,OAAS,GACvC,cAAC,EAAD,CAASlB,MAAM,gBAAf,SACGiD,EAAarB,KAAI,SAACC,GAAD,OAChB,cAAC,GAAD,CAEExC,GAAIwC,EAAMxC,GACVyB,SAAUe,EAAMC,YAChB9B,MAAO6B,EAAME,eACbhB,OAAQc,EAAMG,aACdhB,KAAMa,EAAMI,aAAad,UAAU,EAAG,GACtCF,SAAO,GANFY,EAAMxC,SAYhB6D,GAAaA,EAAUhC,OAAS,GACjC,cAAC,EAAD,CAASlB,MAAM,kBAAf,SACGkD,EAAUtB,KAAI,SAAC8B,GAAD,OACb,cAAC,GAAD,CAEErE,GAAIqE,EAAKrE,GACTyB,SAAU4C,EAAK5B,YACf9B,MAAO0D,EAAKC,cACZ5C,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,eAAezC,UAAU,EAAG,IALlCuC,EAAKrE,SAUfmC,GAAS,cAAC,GAAD,CAASnB,MAAM,UAAUE,KAAMiB,IACxC0B,GAAaD,GAAqC,IAArBC,EAAUhC,QAAwC,IAAxB+B,EAAa/B,QAAiB,cAAC,GAAD,CAASX,KAAK,gBAAgBF,MAAM,mBCrEnHwD,G,kDCGb,aAAe,IAAD,8BACZ,gBAUFT,aAAe,SAACU,GACdA,EAAEC,iBAEiB,KADI,EAAK5B,MAApBgB,YAEN,EAAKa,gBAfK,EAmBdX,WAAa,SAACS,GAAO,IACDN,EAAYM,EAAtBG,OAAUT,MAClB,EAAKjB,SAAS,CACZY,WAAYK,KAtBF,EA0BdQ,aA1Bc,sBA0BC,oCAAAE,EAAA,6DACLf,EAAe,EAAKhB,MAApBgB,WACR,EAAKZ,SAAS,CAAEd,SAAS,IAFZ,kBAIuCtC,EAAiBgE,GAJxD,uBAIcF,EAJd,EAIHb,KAAQC,QAJL,SAKoC5C,EAAa0D,GALjD,gBAKcD,EALd,EAKHd,KAAQC,QAChB,EAAKE,SAAS,CAAEU,eAAcC,cANnB,kDAQX,EAAKX,SAAS,CAAEf,MAAO,yBARZ,yBAUX,EAAKe,SAAS,CAAEd,SAAS,IAVd,6EAxBb,EAAKU,MAAQ,CACXc,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ1B,SAAS,EACTD,MAAO,MAPG,E,qDAwCJ,IAAD,EAGHc,KAAKH,MADPc,EAFK,EAELA,aAAcC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,WAAY1B,EAFhC,EAEgCA,QAASD,EAFzC,EAEyCA,MAGhD,OACE,cAAC,GAAD,CACEyB,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZ1B,QAASA,EACTD,MAAOA,EACP4B,aAAcd,KAAKc,aACnBC,WAAYf,KAAKe,iB,GAtDIX,IAAMC,W,iGCOnC,IAAMjD,GAAYpB,IAAOqB,IAAV,MA0EAwE,GAtEK,SAAC,GAAD,IAClBC,EADkB,EAClBA,SAAU7C,EADQ,EACRA,QAAS8C,EADD,EACCA,YAAa7C,EADd,EACcA,MAAOC,EADrB,EACqBA,QADrB,OAGlB,qCACE,cAACC,EAAA,EAAD,UACE,iDAEDD,EACC,cAACE,EAAD,IAEA,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,iDAED0C,GAAYA,EAASlD,OAAS,GAC/B,cAAC,EAAD,CAASlB,MAAM,aAAf,SACGoE,EAASxC,KAAI,SAAC8B,GAAD,OACZ,cAAC,GAAD,CAEErE,GAAIqE,EAAKrE,GACTyB,SAAU4C,EAAK5B,YACf9B,MAAO0D,EAAKC,cACZ5C,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,eAAezC,UAAU,EAAG,IALlCuC,EAAKrE,SAUfkC,GAAWA,EAAQL,OAAS,GAC7B,cAAC,EAAD,CAASlB,MAAM,UAAf,SACGuB,EAAQK,KAAI,SAAC8B,GAAD,OACX,cAAC,GAAD,CAEErE,GAAIqE,EAAKrE,GACTyB,SAAU4C,EAAK5B,YACf9B,MAAO0D,EAAKC,cACZ5C,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,eAAezC,UAAU,EAAG,IALlCuC,EAAKrE,SAUfgF,GAAeA,EAAYnD,OAAS,GACrC,cAAC,EAAD,CAASlB,MAAM,eAAf,SACGqE,EAAYzC,KAAI,SAAC8B,GAAD,OACf,cAAC,GAAD,CAEErE,GAAIqE,EAAKrE,GACTyB,SAAU4C,EAAK5B,YACf9B,MAAO0D,EAAKC,cACZ5C,OAAQ2C,EAAK1B,aACbhB,KAAM0C,EAAKE,eAAezC,UAAU,EAAG,IALlCuC,EAAKrE,SAUfmC,GAAS,cAAC,GAAD,CAASnB,MAAM,UAAUE,KAAMiB,WCrElC8C,G,kDCGb,aAAe,IAAD,8BACZ,gBACKnC,MAAQ,CACXiC,SAAU,KACV7C,QAAS,KACT8C,YAAa,KACb7C,MAAO,KACPC,SAAS,GAPC,E,mNAaoChC,I,uBAArB2E,E,EAAjBhC,KAAQC,Q,SAC6B5C,I,uBAApB8B,E,EAAjBa,KAAQC,Q,UACiC5C,I,iBAAxB4E,E,EAAjBjC,KAAQC,QAChBC,KAAKC,SAAS,CACZ6B,WACA7C,UACA8C,gB,kDAIF/B,KAAKC,SAAS,CACZf,MAAO,4B,yBAGTc,KAAKC,SAAS,CACZd,SAAS,I,kKAKL,IAAD,EAGHa,KAAKH,MADPiC,EAFK,EAELA,SAAU7C,EAFL,EAEKA,QAAS8C,EAFd,EAEcA,YAAa7C,EAF3B,EAE2BA,MAAOC,EAFlC,EAEkCA,QAGzC,OADAe,QAAQC,IAAIH,KAAKH,OAEf,cAAC,GAAD,CACEiC,SAAUA,EACV7C,QAASA,EACT8C,YAAaA,EACb7C,MAAOA,EACPC,QAASA,Q,GA7CYiB,IAAMC,W,86CCKnC,IAAMjD,GAAYpB,IAAOqB,IAAV,MAMT4E,GAAWjG,IAAOqB,IAAV,MAMY,SAACjB,GAAD,OAAWA,EAAM8F,WAOrCC,GAAUnG,IAAOqB,IAAV,MAOP+E,GAAQpG,IAAOqB,IAAV,MAEe,SAACjB,GAAD,OAAWA,EAAM8F,WAMrCG,GAAOrG,IAAOqB,IAAV,MAIJC,GAAQtB,IAAOsG,GAAV,MAGLC,GAAgBvG,IAAOqB,IAAV,MAGb1B,GAAOK,IAAOuB,KAAV,MACJiF,GAAUxG,IAAOuB,KAAV,MAGPkF,GAAWzG,IAAO0G,EAAV,MAyECC,GAlES,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQzD,EAAX,EAAWA,QAAX,EAAoBD,MAApB,OAAiCC,EAErD,qCACE,cAACC,EAAA,EAAD,UACE,sDAEF,cAACC,EAAD,OAIF,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,kCACGwD,EAAOnD,eAAiBmD,EAAOnD,eAAiBmD,EAAOvB,cACvD,IAFH,eAMF,cAACY,GAAD,CAAUC,QAAO,6CAAwCU,EAAOC,iBAChE,eAACV,GAAD,WACE,cAACC,GAAD,CAAOF,QAASU,EAAOpD,YAAP,6CAA2DoD,EAAOpD,aAAgB,+BAClG,eAAC6C,GAAD,WACE,cAAC,GAAD,UACGO,EAAOnD,eACJmD,EAAOnD,eACPmD,EAAOvB,gBAEb,eAACkB,GAAD,WACE,cAAC,GAAD,UACGK,EAAOjD,aACJiD,EAAOjD,aAAad,UAAU,EAAG,GACjC+D,EAAOtB,eAAezC,UAAU,EAAG,KAEzC,cAAC2D,GAAD,qBAGA,eAAC,GAAD,WACGI,EAAOE,QACJF,EAAOE,QACPF,EAAOG,iBAAiB,GAC3B,IAJH,SAOA,cAACP,GAAD,qBAGA,cAAC,GAAD,UACGI,EAAOI,QAAUJ,EAAOI,OAAO1D,KAC9B,SAAC2D,EAAOC,GAAR,OAAmBA,IAAUN,EAAOI,OAAOpE,OAAS,EAChDqE,EAAME,KADS,UAEZF,EAAME,KAFM,eAMzB,cAACV,GAAD,UAAWG,EAAOQ,qBCpHbC,G,kDCGb,WAAYjH,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGHZ,EACVY,EADFX,SAAYD,SAHG,OAKjB,EAAKqE,MAAQ,CACX+C,OAAQ,KACR1D,MAAO,KACPC,SAAS,EACTR,QAASnD,EAAS8H,SAAS,YATZ,E,mMAqBbtD,KAAK5D,MALKW,E,EADZwG,MACE7G,OAAUK,GAGVyG,E,EADFC,QACED,KAGI7E,EAAYqB,KAAKH,MAAjBlB,QACF+E,EAAWC,SAAS5G,EAAI,IAC1B6G,MAAMF,IACRF,EAAK,KAEHZ,EAAS,K,UAEPjE,E,iCACwB9B,EAAsB6G,G,gBAAvCd,E,EAAN9C,KACHE,KAAKC,SAAS,CAAE2C,W,yCAEUzF,EAAiBuG,G,iBAAlCd,E,EAAN9C,KACHE,KAAKC,SAAS,CAAE2C,W,0DAGlB5C,KAAKC,SAAS,CAAEf,MAAO,0B,yBAEvBc,KAAKC,SAAS,CAAEd,SAAS,I,kKAInB,IAAD,EAC4Ba,KAAKH,MAAhC+C,EADD,EACCA,OAAQ1D,EADT,EACSA,MAAOC,EADhB,EACgBA,QAEvB,OADAe,QAAQC,IAAIH,KAAKH,OAEf,cAAC,GAAD,CACE+C,OAAQA,EACRzD,QAASA,EACTD,MAAOA,Q,GAnDekB,IAAMC,WCMrB,qBACb,eAAC,IAAD,WACE,cAACtE,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8H,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,cAAC,IAAD,CAAOJ,KAAK,UAAUC,OAAK,EAACC,UAAWG,KACvC,cAAC,IAAD,CAAOL,KAAK,aAAaC,OAAK,EAACC,UAAWI,KAC1C,cAAC,IAAD,CAAON,KAAK,YAAYC,OAAK,EAACC,UAAWI,KACzC,cAAC,IAAD,CAAUC,KAAK,IAAItI,GAAG,a,ufChB5B,IAiBeuI,GAjBMC,YAAH,KACZC,MCOSC,GAPH,kBACV,qCACE,cAACC,GAAD,IACA,cAACC,GAAD,QCIJC,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9d84a248.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    background-color: rgba(20,20,20,0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8)\n`;\nconst List = styled.ul`\n    display:flex;\n`;\nconst Item = styled.li`\n    width:80px;\n    height: 50px;\n    text-align:center;\n    border-bottom: 5px solid ${(props) => (props.current ? 'red' : 'transparent')};\n    transition: .3s ease-in-out;\n`;\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n","import axios from 'axios';\n\n// const CONN_INFO = {\n//   baseURL: 'https: => Please input any url',\n//   params: {\n//     api_key: 'Something very long api key',\n//     language: 'en-US',\n//   },\n// };\n// const api = axios.create(CONN_INFO);\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '10923b261ba94d897ac6b81148314a3f',\n    language: 'eu-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/now_playing'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: (id) => api.get(`movie/${id}`, {\n    params: {\n      append_to_response: 'videos',\n    },\n  }),\n  search: (term) => api.get('search/movie', {\n    params: {\n      query: term,\n    },\n  }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: (id) => api.get(`tv/${id}`, {\n    params: {\n      append_to_response: 'videos',\n    },\n  }),\n  search: (term) => api.get('search/tv', {\n    params: {\n      query: term,\n    },\n  }),\n};\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom:50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap:25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\n// oneOfType은 리스트 안에 있는 타입 중 하나일 수 있다는 뜻\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\nconst Text = styled.span`\n    color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\nexport default Message;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\nconst Image = styled.div`\nbackground-image: url(${(props) => props.bgUrl});\nheight: 180px;\nbackground-size: cover;\nborder-radius: 4px;\nbackground-position: center center;\ntransition: opacity 0.1s linear;\n`;\nconst Rating = styled.div`\nbottom: 5px;\nright: 5px;\nposition: absolute;\nopacity: 0;\ntransition: opacity 0.1s linear;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative; \n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\nconst Year = styled.div`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({\n  id, imageUrl, title, rating, year, isMovie = false,\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : import('../assets/image-not-found.jpg')} />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            🌟\n          </span>\n          {' '}\n          {rating}\n          /10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0, 18)} ...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({\n  nowPlaying, upcoming, popular, error, loading,\n}) => (\n  <>\n    <Helmet>\n      <title>Movies | VFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | VFlix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie\n            />\n          ))}\n        </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n        <Section title=\"Up Coming\">\n          {upcoming.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie\n            />\n          ))}\n        </Section>\n        )}\n        {popular && popular.length > 0 && (\n        <Section title=\"Popular\">\n          {popular.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie\n            />\n          ))}\n        </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import { moviesApi } from 'api';\nimport React from 'react';\nimport HomePresenter from './HomePresenter';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nowPlaying: null,\n      upcoming: null,\n      popular: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n      const { data: { results: upcoming } } = await moviesApi.upcoming();\n      const { data: { results: popular } } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    //   throw Error(); => await을 사용함으로 promise 에러 통제 가능\n    } catch {\n      this.setState({ error: \"[1]: Can't load api data\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const {\n      nowPlaying, upcoming, popular, error, loading,\n    } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | VFlix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Moives or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n        <Section title=\"Movie Results\">\n          {movieResults.map((movie) => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie\n            />\n          ))}\n        </Section>\n        )}\n\n        {tvResults && tvResults.length > 0 && (\n        <Section title=\"TV Show Results\">\n          {tvResults.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (<Message text=\"Nothing found\" color=\"#95a5a6\" />)}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport { moviesApi, tvApi } from 'api';\nimport SearchPresenter from './SearchPresenter';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: '',\n      loading: false,\n      error: null,\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (e) => {\n    const { target: { value } } = e;\n    this.setState({\n      searchTerm: value,\n    });\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\n      const { data: { results: tvResults } } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results. \" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const {\n      movieResults, tvResults, searchTerm, loading, error,\n    } = this.state;\n    // console.log(this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst TVPresenter = ({\n  topRated, popular, airingToday, error, loading,\n}) => (\n  <>\n    <Helmet>\n      <title>TV | VFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>TV | VFlix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n        <Section title=\"Top rated!\">\n          {topRated.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n        )}\n        {popular && popular.length > 0 && (\n        <Section title=\"Popular\">\n          {popular.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import { tvApi } from 'api';\nimport React from 'react';\nimport TVPresenter from './TVPresenter';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      topRated: null,\n      popular: null,\n      airingToday: null,\n      error: null,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const { data: { results: topRated } } = await tvApi.topRated();\n      const { data: { results: popular } } = await tvApi.popular();\n      const { data: { results: airingToday } } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    //   throw Error();\n    } catch {\n      this.setState({\n        error: \"[2] Can't load API data\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      topRated, popular, airingToday, error, loading,\n    } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\nconst Title = styled.h3`\n  font-size: 32px\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => (loading\n  ? (\n    <>\n      <Helmet>\n        <title>Loading | VFlix</title>\n      </Helmet>\n      <Loader />\n    </>\n  )\n  : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}\n          {' '}\n          | VFlix\n        </title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n      <Content>\n        <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : import('../../assets/image-not-found.jpg')} />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>\n              •\n            </Divider>\n            <Item>\n              {result.runtime\n                ? result.runtime\n                : result.episode_run_time[0]}\n              {' '}\n              min\n            </Item>\n            <Divider>\n              •\n            </Divider>\n            <Item>\n              {result.genres && result.genres.map(\n                (genre, index) => (index === result.genres.length - 1\n                  ? genre.name\n                  : `${genre.name} / `),\n              )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  ));\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport DetailPresenter from './DetailPresenter';\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: {\n        push,\n      },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id, 10);\n    if (isNaN(parsedId)) {\n      push('/');\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n        this.setState({ result });\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n        this.setState({ result });\n      }\n    } catch {\n      this.setState({ error: \"[4] Can't find detail\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <DetailPresenter\n        result={result}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default DetailContainer;\n","import React from 'react';\nimport {\n  BrowserRouter as Router, Redirect, Route, Switch,\n} from 'react-router-dom';\nimport Header from 'Components/Header';\nimport Home from 'Routes/Home';\nimport Search from 'Routes/Search';\nimport TV from 'Routes/TV';\nimport Detail from 'Routes/Detail';\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" exact component={Search} />\n      <Route path=\"/movie/:id\" exact component={Detail} />\n      <Route path=\"/show/:id\" exact component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset},\n    * {\n        box-sizing: border-box;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    body {\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20,20,20,1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nconst App = () => (\n  <>\n    <Router />\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n// import { moviesApi } from './api';\n\n// import reportWebVitals from './reportWebVitals';\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}